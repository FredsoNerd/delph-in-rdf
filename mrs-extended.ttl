@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix mrs: <http://www.w3.org/2020/mrs#> .

# referençe: Michael Wayne Goodman, University of Washington
# Semantic Operations for Transfer-based Machine Translation


# possibly an owl:Class
mrs:MRS
    a rdf:Class ;
    rdfs:comment "An mrs instance should be a tuple (top, index, rels, hcons, icons)"@en-us .

# making the type variable and its subtypes according to semi.vpm
# erg?
mrs:Variable #tipo geral, similar ao tipo u.
    a rdfs:Class ;
    rdfs:comment ""@en-us .

mrs:ind
 a rdfs:Class ;
 rdfs:subClassOf mrs:Variable ;
 rdfs:comment "The type of individuals"@en-us.

mrs:pVar
 a rdfs:Class;
 rdfs:subClassOf mrs:Variable .
# rdfs:comment "The type of non-events" . #definição estranha

mrs:handle
 a rdfs:Class ;
 rdfs:subClassOf mrs:pVar ;
 rdfs:comment "The type of handles"@en-us . 

mrs:event
 a rdfs:Class ;
 rdfs:subClassOf mrs:ind ;
 rdfs:comment "The type of events"@en-us .

mrs:ref-ind
 a rdfs:Class;
 rdfs:subClassOf mrs:pVar ;
 rdfs:subClassOf mrs:ind ;
 rdfs:comment "The type of referential indexes"@en-us . 


mrs:top
    a rdfs:Property ;
    rdfs:domain mrs:MRS ;
    rdfs:range mrs:handle ;
    rdfs:comment "The global TOP handle"@en-us .
    
mrs:index
    a rdfs:Property ;
    rdfs:domain mrs:MRS ;
    rdfs:range mrs:event;
    rdfs:comment "Global INDEX"@en-us .
    
# revisiting redundancy in rels
mrs:RELS
	rdfs:subClassOf rdf:Bag ;
    rdfs:comment "Elementary Predications"@en-us .
    
mrs:hasRELS
    a rdf:Property;
    rdfs:domain mrs:MRS ;
    rdfs:range mrs:RELS .
   
# revisiting redundancy in hcons
mrs:HCONS
	rdfs:subClassOf rdf:Bag ;
    rdfs:comment "Handle constraints"@en-us .
mrs:hasHCONS
    a rdf:Property ;
    rdfs:domain mrs:MRS ;
    rdfs:range mrs:HCONS ;
    rdfs:comment ""@en-us .
    
# revisiting redundancy in icons
mrs:ICONS
	rdfs:subClassOf rdf:Bag ;
    rdfs:comment "Individual constraints"@en-us .

mrs:hasICONS
    a rdf:Property ;
    rdfs:domain mrs:MRS ;
    rdfs:range mrs:ICONS ;
    rdfs:comment ""@en-us .

# Elementary predications have structure ⟨p, l, v, A⟩
mrs:ElementaryPredication
    a rdfs:Class ;
    rdfs:comment "Quadruples like ⟨p, l, v, A⟩"@en-us .

#review
#mrs:predicate
#    a rdfs:Property ;
#    rdfs:range rdfs:Literal ;
#    rdfs:domain mrs:ElementaryPredication ;
#    rdfs:comment ""@en-us .

mrs:hasPredicate
 a rdfs:Predicate ;
 rdfs:domain mrs:ElementaryPredication ;
 rdfs:range mrs:predicate .

mrs:label
    a rdfs:Property ;
    rdfs:domain mrs:ElementaryPredication ;	
    rdfs:range mrs:h ;
    rdfs:comment "A mapping of a predicate to the variable?"@en-us .


# Constraints are simple triples ⟨lhs, rel, rhs⟩
# There are differences between HCONS and ICONS,
# but for simplicity/generality we create the class of constraints in a general way. (tirar?)
mrs:Constraint
    a rdf:Class ;
    rdfs:comment "simple triples ⟨lhs, rel, rhs⟩"@en-us .

mrs:hcons
 rdfs:subClassOf mrs:Constraint ;
 rdfs:comment "The class of the handle constraints"@en-us .

mrs:icons
 rdfs:subClassOf mrs:Constraint ;
 rdfs:comment "The class of the individual constraints"@en-us .

mrs:hashcons
 a rdf:Property ;
 rdfs:domain mrs:MRS ;
 rdfs:range mrs:hcons .

mrs:hasicons
 a rdf:Property ;
 rdfs:domain mrs:MRS ;
 rdfs:range mrs:icons .

mrs:qeqLHS
 a rdf:Property ;
 rdfs:domain mrs:hcons ;
 rdfs:range mrs:h .

mrs:qeqRHS
 a rdf:Property ;
 rdfs:domain mrs:hcons ;
 rdfs:range mrs:h .

# http://moin.delph-in.net/SaarlandIconsErg
mrs:neqLHS
 a rdf:Property ;
 rdfs:domain mrs:icons ;
 rdfs:range mrs:i .

mrs:neqRHS
 a rdf:Property ;
 rdfs:domain mrs:icons ;
 rdfs:range mrs:i .

mrs:eqLHS
 a rdf:Property ;
 rdfs:domain mrs:icons ;
 rdfs:range mrs:i .

mrs:eqRHS
 a rdf:Property ;
 rdfs:domain mrs:icons ;
 rdfs:range mrs:i .

# Creating notion of predicate and its types
# http://moin.delph-in.net/PredicateRfc
mrs:predicate
 a rdf:Class .

mrs:surfacePredicate
 rdfs:subClassOf mrs:predicate;
 rdfs:comment "Represent overt words of sentence."@en-us .
#Nem toda palavra que aparece é representada numa predicação também.

mrs:abstractPredicate
 rdfs:subClassOf mrs:predicate.
 rdfs:comment "Represent non-lexical information."@en-us .

# Pela "Note for Developers" do link acima, vamos dizer que a estrutura de predicados abstratos é a mesma descrita para os de superfícies

mrs:pos
 a rdf:Class .

mrs:hasLemma
 a rdf:Property ;
 rdfs:domain mrs:predicate ;
 rdfs:range rdfs:Literal .

mrs:hasPos
 a rdf:Property ;
 rdfs:domain mrs:predicate ;
 rdfs:range rdfs:pos .

mrs:hasSense
 a rdf:Property ;
 rdfs:domain mrs:predicate ;
 rdfs:range rdfs:Literal .

# Defining parts of speech (PoS)
# Based on http://moin.delph-in.net/RmrsPos

mrs:n
 a mrs:pos;
 rdfs:comment "PoS tag dedicated to nouns."@en-us .

mrs:v
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to verbs."@en-us .

mrs:a
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to adjectives or adverbs. (?)"@en-us .

mrs:j
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to adjectives."@en-us .

mrs:r
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to adverbs."@en-us .

mrs:s
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to verbal nouns (Korean and Japanese)."@en-us .

mrs:c
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to conjuntions."@en-us .

mrs:p
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to adpositions."@en-us .

mrs:q
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to quantifiers."@en-us .

mrs:x
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to other classes(?)."@en-us .

mrs:u
 a mrs:pos ;
 rdfs:comment "PoS tag dedicated to unknown classes(?)."@en-us .


#Defining person of discourse and the number

mrs:pers
 a rdfs:Property ;
 rdfs:domain mrs:ref-ind ;
 rdfs:range rdfs:Literal . #1, 2 e 3, mas talvez uma classe só pra isso?




# Further ideas from last talk:

# review types of objects defined: Literal, Class,
# or owl types, for example.

# specify kinds and meaning of arguments such as
# REST, BODY, etc in RELS

# remove blank nodes of bags and containeres for
# RELS, HCONS, ICONS, for example

# discuss generation of URIs for identifiation of
# different rdf nodes: mrs, x12, e9, etc. Should
# global prefix be defined by user?

# specify meaning to diferent relations defined
# in vocabulary for ICONS

# specify kinds and meaning of relations wich are
# qeq, lheq, or outscopes in HCONS

# specify kinds and meaning of nodes types such
# as x, e, i, u in NODES definition. Besides that,
# add information about morfology in NODE, such
# as TENSE, MOOD, PERS, etc

# discuss differences of "abstract" and "surface"
# predicates, wich are those wich starts or not
# with undescore: _mouse_n_1 and compound

# define differences between vocabulary defined
# for mrs structures and erg structures.

# add a supertype Variable defined for Handle and Node

# semantic interface for diferent languages